{"version":3,"sources":["components/demo03/Calculator.module.scss","components/demo01/Multiplication.js","components/demo02/Clock.js","components/demo03/Calculator.js","components/App.js","index.js","components/demo01/Multiplication.module.scss","components/demo02/Clock.module.scss"],"names":["module","exports","demo03","calculator","result","result_calculate","result_number","count","count_number","number","count_operator","operator","count_bottom","count_bottom_back","count_bottom_equal","block","Multiplication","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","multipleItems","i","push","react_default","a","createElement","key","className","styles","Multiplication_main_content","Multiplication_main","Multiplication_main_title","Component","listItems","Multiplication_Multiplication","MultiplicationList","demo01","title_block","title_block_bar","title_block_bar_line","line","title_block_text","CalculatorResult","state","calculate","pattern","test","currentFormula","replace","setState","style","font-size","toString","length","CalculatorCount","_this2","numberItem","map","item","onClick","enterNumber","bind","assertThisInitialized","operatorItem","enterOperator","empty","back","equal","Calculator","_this3","pendingNumber","pendingResult","_this4","e","_this4$state","thousandComma","console","log","_this5","_this5$state","charAt","split","calc","thousandCommaResult","_this6","_this7","_this7$state","substring","_this8","Number","join","Calculator_CalculatorResult","Calculator_CalculatorCount","App","BrowserRouter","basename","process","hexschool_js_dungeon","Switch","Route","path","exact","component","ReactDOM","render","components_App","document","getElementById","demo02","container","clock","text","minutes","hours","seconds","pointer"],"mappings":"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","file":"static/js/main.99c3e109.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"demo03\":\"Calculator_demo03__165L4\",\"calculator\":\"Calculator_calculator__3PLJM\",\"result\":\"Calculator_result__3XRN6\",\"result_calculate\":\"Calculator_result_calculate__2mgJC\",\"result_number\":\"Calculator_result_number__31x8H\",\"count\":\"Calculator_count__1E9Zl\",\"count_number\":\"Calculator_count_number__1nN4I\",\"number\":\"Calculator_number__2Ekk6\",\"count_operator\":\"Calculator_count_operator__2H_aG\",\"operator\":\"Calculator_operator__2wWw1\",\"count_bottom\":\"Calculator_count_bottom__2NLen\",\"count_bottom_back\":\"Calculator_count_bottom_back__282nu\",\"count_bottom_equal\":\"Calculator_count_bottom_equal__21xpd\",\"block\":\"Calculator_block__1XvNw\"};","import React, { Component } from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport styles from './Multiplication.module.scss';\r\n\r\nclass Multiplication extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.multipleItems = []\r\n    // console.log(props)\r\n    for (let i = 1; i < 10; i++) {\r\n      this.multipleItems.push(\r\n        <div key={i} className={styles.Multiplication_main_content}>\r\n          <p>{this.props.number} x {i} = {this.props.number * i}</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={styles.Multiplication}>\r\n        <div className={styles.Multiplication_main}>\r\n          <div className={styles.Multiplication_main_title}>\r\n            <p>{this.props.number}</p>\r\n          </div>\r\n          {this.multipleItems}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet listItems = [];\r\nfor (let i = 2; i < 10; i++) {\r\n  listItems.push(<Multiplication key={i} number={i} />)\r\n}\r\n// console.log(listItems)\r\nconst  MultiplicationList = () => (\r\n    // console.log(\"MultiplicationList\")\r\n     <div className={styles.demo01}>\r\n      <div className={styles.title_block}>\r\n        <div className={styles.title_block_bar}>\r\n          <div className={styles.title_block_bar_line}>\r\n            <div className={styles.line}></div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.title_block_text}>\r\n          <h1>九九乘法表</h1>\r\n          <h3>MULTIPLICATION CHART</h3>\r\n        </div>\r\n        <div className={styles.title_block_bar}>\r\n          <div className={styles.title_block_bar_line}>\r\n            <div className={styles.line}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {listItems}\r\n    </div>\r\n)\r\n\r\nexport default MultiplicationList\r\n\r\n// window.addEventListener(\"load\", () => {\r\n//   let myComponent = <MultiplicationList/>;\r\n//   ReactDOM.render(myComponent, document.getElementById('root'));\r\n// });\r\n\r\n","import React, { Component } from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport styles from './Clock.module.scss';\r\n\r\nclass Clock extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.time = []\r\n        let date = new Date()\r\n        this.hour = date.getHours()\r\n        if (this.hour > 12) this.hour = this.hour - 12\r\n        this.state = { hour: this.hour, minute: date.getMinutes(), second: date.getSeconds() }\r\n        this.tick = this.tick.bind(this);\r\n\r\n        for (let i = 0; i < 73; i++) {\r\n            this.sin = Math.sin((i / 72) * (Math.PI * 2))\r\n            this.cos = Math.cos((i / 72) * (Math.PI * 2))\r\n            if (i % 6 === 0 && i !== 0) {\r\n                let hr = i;\r\n                if (hr / 6 > 9) {\r\n                    hr = hr / 6 - 9\r\n                } else {\r\n                    hr = hr / 6 + 3\r\n                }\r\n                this.time.push(\r\n                    <text className={styles.text} x={135 + (90 * this.cos)} y={140 + (90 * this.sin)} fill=\"#ffffff\">{hr}</text>,\r\n                    <line className=\"line\" x1={140 + (100 * this.cos)} y1={140 + (100 * this.sin)} x2={140 + (120 * this.cos)} y2={140 + (120 * this.sin)} style={{ 'stroke': 'Tomato' }} />,\r\n                    <text className=\"text\" x={135 + (125 * this.cos)} y={140 + (128 * this.sin)} fill=\"#ffffff\">{hr + 12}</text>\r\n                )\r\n            }\r\n            else if ((i - 3) % 6 === 0 && i !== 0) {\r\n                this.time.push(\r\n                    <circle cx={140 + (110 * this.cos)} cy={140 + (110 * this.sin)} r=\"5\"\r\n                        fill=\"#FF7600\" />\r\n                )\r\n            }\r\n            else if (i !== 0) {\r\n                this.time.push(\r\n                    <circle className=\"center\" cx={140 + (110 * this.cos)} cy={140 + (110 * this.sin)} r=\"1\"\r\n                        fill=\"#ffffff\" />,\r\n                )\r\n            }\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.timer = setInterval(\r\n            this.tick,\r\n            1000\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n    tick() {\r\n        let date = new Date()\r\n        this.hour = date.getHours()\r\n        if (this.hour > 12) this.hour = this.hour - 12\r\n        this.minutes = date.getMinutes()\r\n        this.seconds = date.getSeconds()\r\n        this.setState({\r\n            hour: this.hour, minute: date.getMinutes(), second: date.getSeconds()\r\n        })\r\n        // console.log(this.state)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={styles.demo02}>\r\n            <div className={styles.container}>\r\n            <div className={styles.clock}>\r\n                <svg width=\"100%\" height=\"100%\" version=\"1.1\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    {this.time}\r\n                </svg>\r\n                <div className={styles.hours + \" \" + styles.pointer} style={{ 'transform': `rotate(${this.state.hour / 12 * 360 - 90}deg)` }}>\r\n                    <svg width=\"100%\" height=\"100%\" version=\"1.1\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <line x1=\"30\" y1=\"4\" x2=\"55\" y2=\"4\" />\r\n                    </svg>\r\n                </div>\r\n                <div className={styles.seconds} style={{ 'transform': `rotate(${this.state.second / 60 * 360 - 90}deg)` }}>\r\n                    <svg width=\"100%\" height=\"100%\" version=\"1.1\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <polyline points=\"5,20 25,20 40,10 50,30 60,20 100,20\" />\r\n                        <circle cx=\"100\" cy=\"20\" r=\"5\"\r\n                            fill=\"#91D109\" />\r\n                    </svg>\r\n                </div>\r\n                <div className={styles.minutes + \" \" + styles.pointer} style={{ 'transform': `rotate(${this.state.minute / 60 * 360 - 90}deg)` }}>\r\n                    <svg width=\"100%\" height=\"100%\" version=\"1.1\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <line x1=\"8\" y1=\"4\" x2=\"50\" y2=\"4\" />\r\n                        <circle cx=\"5\" cy=\"4\" r=\"2\"\r\n                            fill=\"#ffffff\" />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clock\r\n\r\n// window.addEventListener(\"load\", () => {\r\n//     let myComponent =<Clock />\r\n//     ReactDOM.render(myComponent, document.getElementById('root'));\r\n// });\r\n","import React, { Component } from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport styles from './Calculator.module.scss';\r\n\r\n\r\nclass CalculatorResult extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { calculate: \"\", number: 0 }\r\n        var pattern = /(-?\\d+)(\\d{3})/;\r\n        while (pattern.test(this.props.currentFormula)) {\r\n            this.props.currentFormula = this.props.currentFormula.replace(pattern, \"$1,$2\");\r\n        }\r\n        while (pattern.test(this.props.result)) {\r\n            this.props.result = this.props.result.replace(pattern, \"$1,$2\");\r\n        }\r\n        this.setState({ calculate: this.props.currentFormula, number: this.props.result })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={styles.result}>\r\n                <p className={styles.result_calculate}>{this.props.currentFormula}</p>\r\n                <p className={styles.result_number} style={{ 'font-size': (this.props.result.toString().length < 10) ? \"56px\" : \"30px\" }}>{this.props.result}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass CalculatorCount extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\", \"00\", \".\"];\r\n        let operators = [\"÷\", \"×\", \"+\", \"-\"];\r\n        this.numberItem = numbers.map((item) =>\r\n            <div className={styles.number + \" \" + styles.block} onClick={this.props.enterNumber.bind(this, item)}>{item}</div>\r\n        );\r\n        this.operatorItem = operators.map((item) =>\r\n            <div className={styles.number.operator + \" \" + styles.block} onClick={this.props.enterOperator.bind(this, item)}>{item}</div>\r\n        )\r\n        // this.props.enterNumber = this.props.enterNumber.bind(this)\r\n        // this.props.enterOperator = this.props.enterOperator.bind(this)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={styles.count}>\r\n                <div className={styles.count_number} >\r\n                    {this.numberItem}\r\n                </div>\r\n                <div className={styles.count_operator}>\r\n                    {this.operatorItem}\r\n                </div>\r\n                <div className={styles.count_bottom}>\r\n                    <div className={styles.count_bottom_back + \" \" + styles.block} onClick={this.props.empty}>AC</div>\r\n                    <div className={styles.count_bottom_back + \" \" + styles.block} onClick={this.props.back}>⌫</div>\r\n                    <div className={styles.count_bottom_equal} onClick={this.props.equal}>=</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { currentFormula: \"\", pendingNumber: \"\", result: 0, pendingResult: 0 }\r\n    }\r\n    enterNumber() {\r\n        return (e) => {\r\n            let { currentFormula, pendingNumber } = this.state\r\n            if (currentFormula === \"\") {\r\n                this.setState({\r\n                    pendingNumber: \"\" + e,\r\n                    result: 0,\r\n                    pendingResult: 0,\r\n                    currentFormula: this.thousandComma(currentFormula + e)\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    pendingNumber: pendingNumber + e,\r\n                    currentFormula: this.thousandComma(currentFormula + e)\r\n                })\r\n            }\r\n            console.log(pendingNumber)\r\n        }\r\n    }\r\n    enterOperator() {\r\n        return (e) => {\r\n            let { currentFormula, pendingNumber, result, pendingResult } = this.state\r\n            console.log(currentFormula + ',' + pendingNumber + ',' + result + ',' + pendingResult)\r\n            if (currentFormula.charAt(currentFormula.length - 1) !== \" \") {\r\n                if (pendingNumber === \"\" && currentFormula === \"\") {\r\n                    pendingNumber = +\"0\"\r\n                    currentFormula = +\"0\"\r\n                }\r\n                else if (result !== 0 && currentFormula === \"\") {\r\n                    currentFormula = pendingResult\r\n                }\r\n                if (pendingNumber.split(\" \").length > 2) {\r\n                    console.log('calc')\r\n                    let calc = this.calc(pendingNumber.split(\" \"))\r\n                    this.setState({\r\n                        pendingNumber: calc + \" \" + e + \" \",\r\n                        currentFormula: currentFormula + \" \" + e + \" \",\r\n                        result: this.thousandCommaResult(calc),\r\n                        pendingResult: calc\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        pendingNumber: pendingNumber + \" \" + e + \" \",\r\n                        currentFormula: currentFormula + \" \" + e + \" \",\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    empty() {\r\n        return (e) => {\r\n            this.setState({\r\n                currentFormula: \"\",\r\n                result: 0,\r\n                pendingResult: 0,\r\n                pendingNumber: \"\"\r\n            })\r\n        }\r\n    }\r\n    back() {\r\n        return (e) => {\r\n            let { currentFormula, pendingNumber } = this.state\r\n            if (currentFormula.charAt(currentFormula.length - 1) !== \"\") {\r\n                currentFormula = currentFormula.substring(0, currentFormula.length - 1);\r\n                pendingNumber = pendingNumber.substring(0, pendingNumber.length - 1);\r\n            } else {\r\n                currentFormula = currentFormula.substring(0, currentFormula.length - 4);\r\n                pendingNumber = pendingNumber.substring(0, pendingNumber.length - 4);\r\n            }\r\n            if (currentFormula.length === 0) {\r\n                this.setState({\r\n                    currentFormula: \"\",\r\n                    pendingNumber: \"\",\r\n                    result: 0,\r\n                    pendingResult: 0\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    currentFormula: currentFormula,\r\n                    pendingNumber: pendingNumber\r\n                })\r\n            }\r\n        }\r\n    }\r\n    equal() {\r\n        return (e) => {\r\n            let { pendingNumber } = this.state\r\n            let calc = this.calc(pendingNumber.split(\" \"))\r\n\r\n            this.setState({\r\n                currentFormula: \"\",\r\n                result: this.thousandCommaResult(calc),\r\n                pendingResult: calc\r\n            })\r\n        }\r\n    }\r\n    calc(currentFormula) {\r\n        switch (currentFormula[1]) {\r\n            case '+':\r\n                return Number(currentFormula[0]) + Number(currentFormula[2])\r\n            case '-':\r\n                return Number(currentFormula[0]) - Number(currentFormula[2])\r\n            case '×':\r\n                return Number(currentFormula[0]) * Number(currentFormula[2])\r\n            case '÷':\r\n                return Number(currentFormula[0]) / Number(currentFormula[2])\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    thousandCommaResult(number) {\r\n        return number.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,')\r\n    }\r\n    thousandComma(number) {\r\n        number = number.toString().split(\",\").join(\"\")\r\n        return number.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,')\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={styles.demo03}>\r\n                <div className={styles.calculator}>\r\n                    <CalculatorResult currentFormula={this.state.currentFormula} result={this.state.result} />\r\n                    <CalculatorCount enterNumber={this.enterNumber()} enterOperator={this.enterOperator()} empty={this.empty()} back={this.back()} equal={this.equal()} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator\r\n\r\n// window.addEventListener(\"load\", () => {\r\n//     let myComponent =<Calculator />\r\n//     ReactDOM.render(myComponent, document.getElementById('root'));\r\n// });\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport demo01 from './demo01/Multiplication';\nimport demo02 from './demo02/Clock';\nimport demo03 from './demo03/Calculator';\n\nconst App = () => (\n  <BrowserRouter basename = {process.env.hexschool_js_dungeon}>\n    <Switch>\n      <Route path=\"/\" exact component={demo03} />\n      <Route path=\"/demo01\" component={demo01} />\n      {/* <Route path=\"demo02\" component={demo02} />\n      <Route path={process.env.hexschool_js_dungeon + '/demo03'} component={demo03} /> */}\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"demo01\":\"Multiplication_demo01__3L9rX\",\"title_block\":\"Multiplication_title_block__3RxAA\",\"title_block_text\":\"Multiplication_title_block_text__1b0JG\",\"title_block_bar\":\"Multiplication_title_block_bar__1igz8\",\"title_block_bar_line\":\"Multiplication_title_block_bar_line__X-N8d\",\"line\":\"Multiplication_line__15kKF\",\"Multiplication\":\"Multiplication_Multiplication__WsRei\",\"Multiplication_main\":\"Multiplication_Multiplication_main__lLZ59\",\"Multiplication_main_title\":\"Multiplication_Multiplication_main_title__1Hr5P\",\"Multiplication_main_content\":\"Multiplication_Multiplication_main_content__2zUYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"demo02\":\"Clock_demo02__-SSue\",\"container\":\"Clock_container__SeZUk\",\"clock\":\"Clock_clock__32Cd8\",\"text\":\"Clock_text__1jELL\",\"minutes\":\"Clock_minutes__3RBH-\",\"hours\":\"Clock_hours__2nYuk\",\"seconds\":\"Clock_seconds__2DE8e\",\"pointer\":\"Clock_pointer__jPDXk\"};"],"sourceRoot":""}